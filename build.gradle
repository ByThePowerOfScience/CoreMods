
plugins {
    id 'org.ajoberstar.grgit' version '4.0.2'
    id "com.github.ben-manes.versions" version '0.27.0'
}

apply plugin: 'maven-publish'
apply plugin: 'java-library'
apply plugin: 'eclipse'
apply plugin: 'jacoco'

group 'net.minecraftforge'

java.toolchain.languageVersion = JavaLanguageVersion.of(8)

version = grgit.describe(longDescr: true).split('-').with { "${it[0]}.${it[1]}" }

//jacoco {
//    toolVersion = '0.8.6'
//}

def isNonStable = { String version ->
    def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { it -> version.toUpperCase().contains(it) }
    def regex = /^[0-9,.v-]+(-r)?$/
    return !stableKeyword && !(version ==~ regex)
}

dependencyUpdates {
    rejectVersionIf {
        isNonStable(it.candidate.version)
    }
}

test {
    useJUnitPlatform()
    javaLauncher = javaToolchains.launcherFor {
        languageVersion = JavaLanguageVersion.of(8)
    }
}

repositories {
    mavenCentral()
    maven {
        name = 'forge'
        url = 'https://files.minecraftforge.net/maven/'
    }
}

sourceSets {
    testJars
    java15
}

eclipse.classpath.sourceSets -= [sourceSets.java15]
// Default all standard Java compile tasks to Java 8
// We'll specify Java 15 only for the java15 compile task
tasks.withType(JavaCompile).configureEach {
    javaCompiler = javaToolchains.compilerFor {
        languageVersion = JavaLanguageVersion.of(8)
    }
}

compileJava15Java {
    javaCompiler = javaToolchains.compilerFor {
        languageVersion = JavaLanguageVersion.of(15)
    }
}

dependencies {
    testImplementation('org.junit.jupiter:junit-jupiter-api:5.6.+')
    testImplementation('org.powermock:powermock-core:2.0.+')
    testImplementation('org.hamcrest:hamcrest-core:2.2')
    testImplementation('org.apache.logging.log4j:log4j-core:2.11.2')
    testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine:5.6.+')
    testRuntimeOnly(sourceSets.testJars.output)
    implementation('cpw.mods:modlauncher:6.1.+')
    implementation('org.apache.logging.log4j:log4j-api:2.11.2')
    implementation('org.ow2.asm:asm:7.2')
    implementation('org.ow2.asm:asm-commons:7.2')
    implementation('org.ow2.asm:asm-tree:7.2')
    implementation('net.minecraftforge:forgespi:3.1.+')
    implementation('com.google.code.findbugs:jsr305:3.0.2')
	
    // The Java15 code depends on (can see) the "main" source set
    java15Implementation files(sourceSets.main.output.classesDirs) { builtBy compileJava }
	java15Implementation('org.openjdk.nashorn:nashorn-core:15.1.1')
}

ext.sharedManifest = manifest {
	attributes('Multi-Release': 'true')
    attributes(['Specification-Title': 'coremods',
                'Specification-Vendor': 'forge',
                'Specification-Version': '1', // Currently version 1 of the coremod specification
                'Implementation-Title': project.name,
                'Implementation-Version': "${project.version}+${System.getenv("BUILD_NUMBER")?:0}+${grgit.branch.current().getName()}.${grgit.head().abbreviatedId}",
                'Implementation-Vendor' :'forge',
                'Implementation-Timestamp': java.time.Instant.now().toString(),
                'Git-Commit': grgit.head().abbreviatedId,
                'Git-Branch': grgit.branch.current().getName(),
                'Build-Number': "${System.getenv("BUILD_NUMBER")?:0}"],
            'net/minecraftforge/coremod/')
}

jar {
    into('META-INF/versions/15') {
        from sourceSets.java15.output
    }
    manifest = project.manifest {
        from sharedManifest
    }
}

task sourcesJar(type: Jar) {
    archiveClassifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives jar
    archives sourcesJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            pom {
                from components.java
                artifact sourcesJar
                name = 'Core Mods'
                description = 'Core modding framework for use with forge'
                url = 'https://github.com/MinecraftForge/coremods'
                scm {
                    url = 'https://github.com/MinecraftForge/coremods'
                    connection = 'scm:git:git://github.com/MinecraftForge/coremods.git'
                    developerConnection = 'scm:git:git@github.com:MinecraftForge/coremods.git'
                }
                issueManagement {
                    system = 'github'
                    url = 'https://github.com/MinecraftForge/coremods/issues'
                }

                licenses {
                    license {
                        name = 'LGPLv2.1'
                        url = 'https://www.gnu.org/licenses/old-licenses/lgpl-2.1.txt'
                    }
                }

                developers {
                    developer {
                        id = 'cpw'
                        name = 'cpw'
                    }
                }
            }
        }
    }
    repositories {
        maven {
            credentials {
                username project.properties.forgeMavenUser?:'fake'
                password project.properties.forgeMavenPassword?:'news'
            }
            url 'http://files.minecraftforge.net/maven/manage/upload'
        }
    }
}